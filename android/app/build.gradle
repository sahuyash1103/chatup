def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def releasekeystoreProperties = new Properties()
def releasekeystorePropertiesFile = rootProject.file('release_key.properties')
if (releasekeystorePropertiesFile.exists()) {
    releasekeystoreProperties.load(new FileInputStream(releasekeystorePropertiesFile))
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

     packagingOptions {
        // Exclude file to avoid
        // Error: Duplicate files during packaging of APK
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/*.kotlin_module'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.unreal.chatup"
        minSdkVersion 19
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        if (System.getenv("CHATUP_RELEASE_KEYSTORE_PATH")) {
            release {
                storeFile file(System.getenv("CHATUP_RELEASE_KEYSTORE_PATH"))
                keyAlias System.getenv("RELEASE_KEYSTORE_ALIAS")
                keyPassword System.getenv("RELEASE_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("RELEASE_KEYSTORE_PASSWORD")
            }
        } else {
         release {
           keyAlias releasekeystoreProperties['keyAlias']
           keyPassword releasekeystoreProperties['keyPassword']
           storeFile releasekeystoreProperties['storeFile'] ? file(releasekeystoreProperties['storeFile']) : null
           storePassword releasekeystoreProperties['storePassword']
       }
       }
    }

    flavorDimensions "default"
    productFlavors { 
        production {
            dimension "default"
            applicationIdSuffix ""
            manifestPlaceholders = [appName: "chatup"]
        }
        staging {
            dimension "default"
            applicationIdSuffix ""
            manifestPlaceholders = [appName: "[STG] chatup"]
        }
        development {
            dimension "default"
            applicationIdSuffix ""
            manifestPlaceholders = [appName: "[DEV] chatup"]
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:31.0.2')    
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.firebase:firebase-appcheck-debug:16.0.0'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
}
